{"version":3,"file":"scripts.min.js","mappings":"6BACmEA,EAAOC,QAGlE,WAAe,aAEnB,IAAIC,EAAO,CACPC,GAAI,CACAC,SAAU,yBACVC,MAAO,6CACPC,OAAQ,+BACRC,QAAS,uCACTC,IAAK,0CACLC,IAAK,+CACLC,UAAW,oCACXC,UAAW,oCACXC,IAAK,uCACLC,IAAK,uCACLC,QAAS,oCACTC,OAAQ,8BACRC,QAAS,iCASjB,SAASC,EAAKC,GACV,IAAIC,EAAaC,UAEjB,OAAOC,KAAKC,QAAQ,iBAAiB,SAAUC,EAAGC,GAC9C,OAAOL,EAAWK,EACtB,GACJ,CAEA,SAASC,EAAiBC,GACtB,OAAOA,EAAMC,SAASC,KAAKC,KAAKC,iBAAiB,eAAiBJ,EAAMK,aAAa,QAAU,cAAcC,MACjH,CAWA,IAAIC,EAAgB,CAChBC,QAAS,aACTC,WAAY,aACZC,aAAc,cACdC,gBAAiB,aACjBC,aAAc,MACdC,eAAgB,aAGhBC,EAAiB,iBAEjBC,EAAqB,CAAC,WAAY,MAAO,MAAO,YAAa,YAAa,WAC1EC,EAAc,yJAEdC,EAAgB,yCAChBC,EAAgB,KAChBC,EAAa,CAAC,EAEdC,EAAI,SAAWC,EAAMC,GACrBA,EAAUD,KAAOA,OACUE,IAAvBD,EAAUE,WAAwBF,EAAUE,SAAW,GAC3DL,EAAWE,GAAQC,CACvB,EAoCA,SAASG,EAAStB,EAAMuB,EAAQC,GAE5B,IAAIzB,EAAOP,KAgDX,SAASiC,EAAqBC,EAAKC,EAAQT,EAAMU,GAC7C,IAAIT,EAAYH,EAAWE,GAC3B,GAAIC,IACAO,EAAIG,KAAKV,GACLS,GAAO,CACP,IAAIE,EAAuB,YAATZ,EAAqB,CAACU,GAASA,EAAMG,MAAM,KAC7DD,EAAYE,QAAQ,MACpBL,EAAOT,GAAQY,CACnB,CAER,CAgEA,SAASG,EAAeC,GAGpB,IAFA,IAAIC,EAAS,GACTC,GAAQ,EACHC,EAAI,EAAGH,EAAMlB,WAAWqB,GAAIA,IAAK,CACtC,IAAIlB,EAAYe,EAAMlB,WAAWqB,GAC7BV,EAASO,EAAMP,OAAOR,EAAUD,MAAQgB,EAAMP,OAAOR,EAAUD,MAAQ,GAE3E,GADAS,EAAO,GAAKO,EAAMrC,MAAM+B,OACnBT,EAAUmB,GAAGC,MAAML,EAAMrC,MAAO8B,KACjCS,GAAQ,EAEqB,mBAAlBjB,EAAUqB,IACjBL,EAAON,KAAKV,EAAUqB,IAAIN,EAAMrC,MAAM+B,MAAOD,IACb,iBAAlBR,EAAUqB,IACxBL,EAAON,KAAKzC,EAAKmD,MAAMpB,EAAUqB,IAAKb,IAC/BR,EAAUqB,MAAQC,OAAOtB,EAAUqB,MAAQrB,EAAUqB,IAAIzB,GAEhEoB,EAAON,KAAKzC,EAAKmD,MAAMpB,EAAUqB,IAAIzB,GAAgBY,IAC9CO,EAAMQ,SAAS3B,IAAkBmB,EAAMQ,SAAS3B,GAAeI,EAAUD,MAChFiB,EAAON,KAAKzC,EAAKmD,MAAML,EAAMQ,SAAS3B,GAAeI,EAAUD,MAAOS,IAC/DtD,EAAK0C,IAAkB1C,EAAK0C,GAAeI,EAAUD,MAC5DiB,EAAON,KAAKzC,EAAKmD,MAAMlE,EAAK0C,GAAeI,EAAUD,MAAOS,IAE5DQ,EAAON,KAAKzC,EAAKmD,MAAMlE,EAAK0C,GAAe5B,QAASwC,KAGjC,IAAnBR,EAAUwB,MACV,KAGZ,CAEA,OADAT,EAAMC,OAASA,EACRC,CACX,CA6BA,SAASQ,EAAkBV,GACvB,GAAIA,EAAMW,cACN,OAAOX,EAAMW,cAEjB,IAAIC,EAjRZ,SAAsBC,EAAIC,GACtB,MAAQD,EAAKA,EAAGE,iBAAmBF,EAAGG,UAAUC,SAASH,KACzD,OAAOD,CACX,CA8QgCK,CAAalB,EAAMrC,MAAOE,EAAKwB,OAAOlB,SAC1DG,EAAkB,KAClB6C,EAAmB,KAevB,OAbI7C,EADAT,EAAKwB,OAAOlB,UAAYN,EAAKwB,OAAOf,gBAClBsC,EAEAA,EAAkBQ,cAAc,IAAMvD,EAAKwB,OAAOf,qBAGpE6C,EAAmB7C,EAAgB8C,cAAc,IAAM3C,OAEnD0C,EAAmBE,SAASC,cAAczD,EAAKwB,OAAOd,eACrCgD,UAAY9C,EAAiB,IAAMZ,EAAKwB,OAAOb,eAChEF,EAAgBkD,YAAYL,GAC5BA,EAAiBM,gBAAkBN,EAAiBO,MAAMC,UAG3D3B,EAAMW,cAAgB,CAACC,EAAmBO,EACrD,CAEA,SAASS,EAAW5B,GAChB,IAAIW,EAAgBD,EAAkBV,GAClCY,EAAoBD,EAAc,GAClCQ,EAAmBR,EAAc,GAEjChD,EAAQqC,EAAMrC,MAGdkE,EAAU,UADAlE,EAAMmE,IAAMC,KAAKC,OAAM,IAAIC,MAAOC,UAAYH,KAAKI,WAG7DvB,IACAA,EAAkBI,UAAUoB,OAAOvE,EAAKwB,OAAOhB,cAC/CuC,EAAkBI,UAAUqB,IAAIxE,EAAKwB,OAAOjB,YAC5CT,EAAM2E,aAAa,mBAAoBT,GACvClE,EAAM2E,aAAa,eAAgB,SAEnCnB,IACAA,EAAiBmB,aAAa,KAAMT,GACpCV,EAAiBmB,aAAa,OAAQ,SACtCnB,EAAiBoB,UAAYvC,EAAMC,OAAOuC,KAAK,SAC/CrB,EAAiBO,MAAMC,QAAUR,EAAiBM,iBAAmB,GAE7E,CAoCA,SAASgB,EAAazC,GAClB,IAAIY,EAxBR,SAAsBZ,GAClB,IAAIW,EAAgBD,EAAkBV,GAClCY,EAAoBD,EAAc,GAClCQ,EAAmBR,EAAc,GACjChD,EAAQqC,EAAMrC,MAgBlB,OAbIiD,IAEAA,EAAkBI,UAAUoB,OAAOvE,EAAKwB,OAAOjB,YAC/CwC,EAAkBI,UAAUoB,OAAOvE,EAAKwB,OAAOhB,cAC/CV,EAAM+E,gBAAgB,oBACtB/E,EAAM+E,gBAAgB,iBAEtBvB,IACAA,EAAiBuB,gBAAgB,MACjCvB,EAAiBuB,gBAAgB,QACjCvB,EAAiBoB,UAAY,GAC7BpB,EAAiBO,MAAMC,QAAU,QAE9BhB,CACX,CAG4BgC,CAAa3C,GAAO,GAC5CY,GAAqBA,EAAkBI,UAAUqB,IAAIxE,EAAKwB,OAAOhB,aACrE,CAiCA,OAzSA,SAAcP,EAAMuB,EAAQC,GAExBxB,EAAKwE,aAAa,aAAc,QAEhCzE,EAAKC,KAAOA,EACZD,EAAKwB,OA9Eb,SAAqBuD,EAAMC,GACvB,IAAK,IAAIC,KAAQD,EACPC,KAAQF,IACVA,EAAKE,GAAQD,EAAKC,IAG1B,OAAOF,CACX,CAuEsBG,CAAY1D,GAAU,CAAC,EAAGnB,GACxCL,EAAKyB,QAAkB,IAATA,GACdzB,EAAKmF,OAASC,MAAMC,KAAKpF,EAAKC,iBA7DvB,oEA6DmDoF,IAAI,SAAUxF,GAEpE,IAAI6B,EAAM,GACNC,EAAS,CAAC,EACVe,EAAW,CAAC,EA6BhB,MA3BA,GAAG4C,QAAQC,KAAK1F,EAAM2F,YAAY,SAAUR,GACxC,GAAI,kBAAkBS,KAAKT,EAAK9D,MAAO,CACnC,IAAIA,EAAO8D,EAAK9D,KAAKwE,OAAO,IACxBC,EAAezE,EAAK0E,MAAM9E,GAC9B,GAAqB,OAAjB6E,EAAuB,CACvB,IAAIE,OAA6BzE,IAApBuE,EAAa,GAAmB,KAAOA,EAAa,GAGjE,OAFKjD,EAASoD,eAAeD,KAASnD,EAASmD,GAAU,CAAC,QAC1DnD,EAASmD,GAAQ3E,EAAK6E,MAAM,EAAG7E,EAAKf,OAASwF,EAAa,GAAGxF,SAAW6E,EAAKpD,MAEjF,CACa,SAATV,IAAiBA,EAAO8D,EAAKpD,OACjCH,EAAqBC,EAAKC,EAAQT,EAAM8D,EAAKpD,MACjD,MAAYhB,EAAmBoF,QAAQhB,EAAK9D,MACxCO,EAAqBC,EAAKC,EAAQqD,EAAK9D,KAAM8D,EAAKpD,OAC7B,SAAdoD,EAAK9D,MACZO,EAAqBC,EAAKC,EAAQqD,EAAKpD,MAE/C,IAEAF,EAAIuE,MAAK,SAAUvG,EAAGC,GAClB,OAAOA,EAAE0B,SAAW3B,EAAE2B,QAC1B,IAEAtB,EAAKyB,MAAQ3B,EAAMqG,kBAAmB,CAAC,QAAS,YAAYF,QAAQnG,EAAMK,aAAa,SAAqB,SAAV,QAAoB,SAAUiG,GAC5HpG,EAAKqG,SAASD,EAAEE,OACpB,EAAEC,KAAKvG,IAEAF,EAAMC,SAAW,CAAED,MAAOA,EAAOmB,WAAYU,EAAKC,OAAQA,EAAQe,SAAUA,EAAU3C,KAAMA,EACvG,EAAEuG,KAAKvG,GACX,CA5CAwG,CAAKvG,EAAMuB,EAAQC,GAgEnBzB,EAAKqG,SAAW,SAAUvG,EAAO2G,GAC7BA,EAAS3G,IAAoB,IAAX2G,IAA6B,IAAV3G,EACrC,IAAIqF,EAASnF,EAAKmF,QACJ,IAAVrF,IAA4B,IAAVA,IACdA,aAAiB4G,YACjBvB,EAAS,CAACrF,EAAMC,WACTD,aAAiB6G,UAAY7G,aAAkB8G,OAAOC,GAAKzB,QAAUtF,aAAiBsF,SAC7FD,EAASC,MAAMC,KAAKvF,GAAOwF,KAAI,SAAUtC,GACrC,OAAOA,EAAGjD,QACd,MAMR,IAFA,IAAIsC,GAAQ,EAEHC,EAAI,EAAG6C,EAAO7C,GAAIA,IAAK,CAC5B,IAAIH,EAAQgD,EAAO7C,GACfJ,EAAeC,IACdsE,GAAU7B,EAAazC,IAExBE,GAAQ,GACPoE,GAAU1C,EAAW5B,GAE9B,CACA,OAAOE,CACX,EAOArC,EAAK8G,UAAY,SAAUhH,GACvB,IAAKA,EAAO,CAER,IADA,IAAIiH,EAAkB,GACbzE,EAAI,EAAGA,EAAItC,EAAKmF,OAAO/E,OAAQkC,IAAK,CACzC,IAAIH,EAAQnC,EAAKmF,OAAO7C,GACpBH,EAAMC,OAAOhC,QACb2G,EAAgBjF,KAAK,CAAEhC,MAAOqC,EAAMrC,MAAOsC,OAAQD,EAAMC,QAEjE,CACA,OAAO2E,CACX,CACA,OAAIjH,EAAMkH,SAA2C,WAAhClH,EAAMkH,QAAQC,cACxBnH,EAAMC,SAASqC,OAEnBtC,EAAMM,OAASN,EAAM,GAAGC,SAASqC,OAAStC,EAAMC,SAASqC,MACpE,EAoDApC,EAAKkH,aAAe,SAAUC,EAAM5E,EAAIE,EAAKnB,EAAUsB,GAC/CuE,aAAgBT,aAChBS,EAAKpH,SAASkB,WAAWa,KAAK,CAAES,GAAIA,EAAIE,IAAKA,EAAKnB,SAAUA,EAAUsB,KAAMA,IAC5EuE,EAAKpH,SAASkB,WAAWiF,MAAK,SAAUvG,EAAGC,GACvC,OAAOA,EAAE0B,SAAW3B,EAAE2B,QAC1B,KAEA8F,QAAQC,KAAK,2CAErB,EA8DArH,EAAKsH,SAAW,SAAUxH,EAAOyH,IAC7BzH,EAAQA,EAAMM,OAASN,EAAM,GAAKA,GAC5BC,SAASqC,OAAON,KAAKyF,GAC3BxD,EAAWjE,EAAMC,SACrB,EAiCAC,EAAKwH,MAAQ,WACT,IAAK,IAAIlF,EAAI,EAAGtC,EAAKmF,OAAO7C,GAAIA,IAC5BtC,EAAKmF,OAAO7C,GAAGQ,cAAgB,KAEnCsC,MAAMC,KAAKrF,EAAKC,KAAKC,iBAAiB,IAAMU,IAAiB0E,KAAI,SAAU6B,GACvEA,EAAKM,WAAWC,YAAYP,EAChC,IACA/B,MAAMC,KAAKrF,EAAKC,KAAKC,iBAAiB,IAAMF,EAAKwB,OAAOlB,UAAUgF,KAAI,SAAU6B,GAC5EA,EAAKhE,UAAUoB,OAAOvE,EAAKwB,OAAOhB,cAClC2G,EAAKhE,UAAUoB,OAAOvE,EAAKwB,OAAOjB,WACtC,GACJ,EAKAP,EAAK2H,QAAU,WACX3H,EAAKwH,QACLxH,EAAKmF,OAAOI,SAAQ,SAAUpD,UACnBA,EAAMrC,MAAMC,QACvB,IACAC,EAAKmF,OAAS,EAClB,EAEAnF,EAAK4H,gBAAkB,SAAUpG,GAC7BnB,EAAgBmB,CACpB,EAEOxB,CACX,CA2BA,OA7WAkB,EAAE,OAAQ,CAAEqB,GAAI,SAAYsF,GACpB,OAAO,CACX,EAAGvG,SAAU,IACjBJ,EAAE,WAAY,CAAEqB,GAAI,SAAYsF,GACxB,MAAqB,UAAdpI,KAAKqI,MAAkC,aAAdrI,KAAKqI,KAAsBjI,EAAiBJ,WAAgB4B,IAARwG,GAAoC,KAAfA,EAAIE,MACjH,EAAGzG,SAAU,GAAIsB,MAAM,IAC3B1B,EAAE,QAAS,CAAEqB,GAAI,SAAYsF,GACrB,OAAQA,GAAO/G,EAAY4E,KAAKmC,EACpC,IACJ3G,EAAE,SAAU,CAAEqB,GAAI,SAAYsF,GACtB,OAAQA,IAAQG,MAAMC,WAAWJ,GACrC,EAAGvG,SAAU,IACjBJ,EAAE,UAAW,CAAEqB,GAAI,SAAYsF,GACvB,OAAQA,GAAO,QAAQnC,KAAKmC,EAChC,IACJ3G,EAAE,YAAa,CAAEqB,GAAI,SAAYsF,EAAKzH,GAC9B,OAAQyH,GAAOA,EAAIzH,QAAU8H,SAAS9H,EAC1C,IACJc,EAAE,YAAa,CAAEqB,GAAI,SAAYsF,EAAKzH,GAC9B,OAAQyH,GAAOA,EAAIzH,QAAU8H,SAAS9H,EAC1C,IACJc,EAAE,MAAO,CAAEqB,GAAI,SAAYsF,EAAKM,GACxB,OAAQN,IAAsB,aAAdpI,KAAKqI,KAAsBjI,EAAiBJ,OAASyI,SAASC,GAASF,WAAWJ,IAAQI,WAAWE,GACzH,IACJjH,EAAE,MAAO,CAAEqB,GAAI,SAAYsF,EAAKM,GACxB,OAAQN,IAAsB,aAAdpI,KAAKqI,KAAsBjI,EAAiBJ,OAASyI,SAASC,GAASF,WAAWJ,IAAQI,WAAWE,GACzH,IACJjH,EAAE,UAAW,CAAEqB,GAAI,SAAYsF,EAAK3I,GAC5B,IAAIkJ,EAAIlJ,EAAQ2G,MAAM,IAAIwC,OAAO,uBAAuB,OAAQR,GAAO,IAAIQ,OAAOD,EAAE,GAAIA,EAAE,IAAI1C,KAAKmC,EACvG,IACJ3G,EAAE,SAAU,CAAEqB,GAAI,SAAYsF,EAAKS,GAC3B,IAAIC,EAAQ/E,SAASD,cAAc+E,GAAoB,OAAOC,KAAWV,IAAQU,EAAM1G,OAAS0G,EAAM1G,QAAUgG,EACpH,IA6TJtG,EAAS2F,aAAe,SAAU/F,EAAMoB,EAAIE,EAAKnB,EAAUsB,GACvD1B,EAAEC,EAAM,CAAEoB,GAAIA,EAAIE,IAAKA,EAAKnB,SAAUA,EAAUsB,KAAMA,GAC1D,EAEArB,EAASiH,YAAc,SAAU1C,EAAQnD,GACrC,IAAI8F,EAAUnK,EAAKyH,eAAeD,GAAUxH,EAAKwH,GAAUxH,EAAKwH,GAAU,CAAC,EAE3EpD,OAAOgG,KAAK/F,GAAU4C,SAAQ,SAAUoD,EAAKC,GACzCH,EAAQE,GAAOhG,EAASgG,EAC5B,GACJ,EAEApH,EAASsH,UAAY,SAAU/C,GAC3B9E,EAAgB8E,CACpB,EAEOvE,CAEV,CAxbmFuH,E,ysDCDpF,aACA,SAKMC,EAAUnC,OACD,QAAf,EAAAmC,EAAOC,gBAAQ,QAAfD,EAAOC,SAAa,CAAC,GACD,QAApB,KAAAD,EAAOC,UAASxC,YAAI,UAAJA,KAIhB,SAAc,GAAd,WAAgByC,EAAY,eAAEC,EAAe,kBAAEC,EAAiB,oBACxDC,EAAa5F,SAASD,cAAc,WAAI0F,EAAY,MACpDI,EAAkBD,EAAWlJ,iBAAiB,+BAC9CoJ,EAAsC,IAAnBJ,EACzBK,EAAWL,EAAiBG,GAE5BA,EAAgB9D,SAAQ,SAACiE,GACvB,OAAAA,EAAerD,iBAAiB,SAAS,SAAEC,GACzC,IAAMqD,EAASD,EAAerJ,aAAa,oBAEvCmJ,IACFlD,EAAEsD,iBACF9C,OAAO+C,QAAQC,UAAU,KAAMpG,SAASqG,MAAOL,EAAerJ,aAAa,UAG7EoJ,EAAWE,EAAQJ,GAkFzB,SAAqBS,EAAwBV,GAC3CA,EAAWlJ,iBAAiB,0BAA0BqF,SAAQ,SAACwE,GACtC,aAAnBD,GAAiC,KAAIE,KAAKC,MAAMF,EAAW5J,aAAa,0BAAwB,GAAE+J,MAAK,SAAAT,GAAU,OAAAA,GAAUK,CAAV,IACnHC,EAAWlG,MAAMC,QAAU,QAG7BiG,EAAWlG,MAAMC,QAAU,MAC7B,GACF,CAzFMqG,CAAYV,EAAQL,EACrB,GAVD,IAaF,IAAMgB,EAAgB5G,SAASD,cAAc,WAAI0F,EAAY,MAC7D,GAAImB,EAAJ,CAEA,IAAMC,EAAeD,EAAc7G,cAAc,oBACjD8G,EAAalE,iBAAiB,SAAS,SAAOmE,GAAY,qC,0DAMxD,OALAA,EAAMZ,iBAEWY,EAAMC,eAEX,IAAAC,cAAaJ,EAAejB,GAMrB,IAAM,IAAAsB,eAAcL,MAJrC,IAAAM,WAAUN,EAAe,iBACzB,K,cAGIO,EAAa,UAanB,IAAAC,eAAcR,GAAe,IAC7B,IAAAM,WAAUN,EAAe,cAIrBS,EAAYT,EAA8BU,QAAQC,YAGtD,IAAAC,UAASL,EAAYN,EAAcQ,GAChCI,MAAK,SAACC,GAEL,IAAIA,EAAOC,GAMT,OALGC,GAAOhE,QAAQiE,IAAI,QAASH,EAAOI,SAEtC,IAAAZ,WAAUN,EAAe,aACzB,IAAAmB,oBAAmBnB,EAAe,iCAClC,IAAAoB,cAAapB,GAKZgB,GAAOhE,QAAQiE,IAAI,UAAWH,EAAOO,QACxCpB,EAAa5F,aAAa,WAAY,KAEtC,IAAAiG,WAAUN,EAAe,UACzB,IAAAmB,oBAAmBnB,EAAe,6BAClC,IAAAQ,eAAcR,GAAe,EAE/B,I,aAvDqB,CA2D3B,GAlFA,IAAMgB,GAAQ,EAqFd,SAAS7B,EAAWE,EAAgBiC,GACpB,IAAVjC,IAAcA,EAAS,YAC3BiC,EAAQnG,SAAQ,SAACoG,GACf,GAAIA,EAAOxL,aAAa,qBAAuBsJ,EAG7C,OAFAkC,EAAOxI,UAAUoB,OAAO,4BACxBoH,EAAOxI,UAAUqB,IAAI,eAGvBmH,EAAOxI,UAAUoB,OAAO,eACxBoH,EAAOxI,UAAUqB,IAAI,sBACvB,GACF,C,oHChGA,qBAA0BoH,EAAkBC,GAC1CD,EAAQ1L,iBAAiB,UAAUqF,SAAQ,SAAC4B,GAAsB,OAAAA,EAAKtD,MAAMC,QAAU,MAArB,IACnC,KAA3B+H,IAAgCD,EAAQrI,cAAc,WAAIsI,IAA0ChI,MAAMC,QAAU,QAC1H,EAEA,8BAAmC8H,EAAkBE,GACnDF,EAAQ1L,iBAAiB,WAAI4L,EAAS,MACnCvG,SAAQ,SAAC4B,GAAsB,OAAAA,EAAKtD,MAAMC,QAAU,OAArB,GACpC,C,6xDChBA,IAAIvC,EAAW,EAAQ,KAajBwK,EAAiB,SAACC,GACtB,OAAKA,EAAKC,QACH,IAAIC,SAAQ,SAACC,GAClBH,EAAKC,QAAQhB,MAAK,SAACC,GAAW,OAAAiB,EAAQ,EAAD,KAAMH,GAAI,CAAEC,QAASf,IAA5B,GAChC,IAH0Bc,CAI5B,EA2GA,SAASI,EACPC,GAGA,IAAKA,EAAUlM,aAAa,QAAS,OAAOkM,EAAUxK,MACtD,OAAQwK,EAAUlM,aAAa,QAAQ8G,eACrC,IAAK,OACH,IAAM,EAAOoF,EAAUC,MAAM,GAC7B,IAAK,EAAM,OACX,MAAO,CACLC,KAAM,EAAKpL,KACX8K,QAAS,IAAIC,SAAQ,SAACC,GACpB,IAAMK,EAAS,IAAIC,WACnBD,EAAOE,cAAc,GACrBF,EAAOG,OAAS,SAACvG,GACf+F,EAAQ/F,EAAEE,OAAO4E,OACnB,CACF,KAEJ,IAAK,QAIL,QACE,OAAOmB,EAAUxK,MAHnB,IAAK,WACH,OAAOwK,EAAUO,QAAUP,EAAUxK,MAAQ,GAInD,CAjIA,yBAAoCgL,G,yEA6FlC,OA5FIC,EAAY,CACdC,MAAO,GACPC,OAAQ,CAAC,EACTC,MAAO,CAAC,GAGKJ,EAAY3M,iBAAiB,yBAErCqF,SAAQ,SAAC8G,GACd,IAAMa,EAwFV,SAAqBb,GAEnB,OAAOA,EAAUlM,aAAa,SAAWkM,EAAUlM,aAAa,KAClE,CA3FqBgN,CAAYd,GAC7B,GAAKa,GAAab,EAAUxK,MAA5B,CAGA,GAAIwK,EAAUe,aAAa,iBAAkB,CAC3C,IAAMC,EAAUhB,EAAUlM,aAAa,iBACjCmN,EAAalB,EAAcC,GAG5BS,EAAa,OAAEO,KAClBP,EAAa,OAAEO,GAAW,IAGT,KAAfC,GACFR,EAAa,OAAEO,GAASvL,KAAKwL,EAEjC,CAGA,GACEjB,EAAUe,aAAa,2BACF,UAArBf,EAAUrF,QAFZ,CAIQqG,EAAUhB,EAAUpI,GAA1B,IACMsJ,EAAmBlB,EAAkBkB,gBAGtCT,EAAa,OAAEO,KAClBP,EAAa,OAAEO,GAAW,IAG5B,IAAK,IAAI/K,EAAI,EAAGA,EAAIiL,EAAgBnN,OAAQkC,IAAK,CAC/C,IAAMkL,EAAcD,EAAgBjL,GAAGT,MACnB,KAAhB2L,GACFV,EAAa,OAAEO,GAASvL,KAAK0L,EAEjC,CAEF,KAGuC,mBAAnCnB,EAAUlM,aAAa,UACK,KAA1B2M,EAAoB,gBACtBA,EAAoB,eAAK,MAE3BA,EAAoB,eAAKV,EAAcC,IAKvCA,EAAUlM,aAAa,SACyB,QAAhDkM,EAAUlM,aAAa,QAAQ8G,cAE/B6F,EAAY,MAAEhL,KAAK,EAAD,KACZsK,EAAcC,IAAqB,CACvCoB,MAAOP,OAMTb,EAAUlM,aAAa,SAC0B,YAAhDkM,EAAUlM,aAAa,QAAQ8G,eACkB,SAAhDoF,EAAUlM,aAAa,QAAQ8G,eAChCoF,EAAUO,WAOXP,EAAUlM,aAAa,SACyB,YAAhDkM,EAAUlM,aAAa,QAAQ8G,eAC/BoF,EAAUlM,aAAa,SAEvB2M,EAAY,MAAEI,GAAYd,EAAcC,GAE9BA,EAAUe,aAAa,mBAEjCN,EAAa,OAAEI,GAAYd,EAAcC,IA9EF,CAgF3C,IAEO,CAAP,EAAOH,QAAQwB,IAAIZ,EAAKC,MAAMzH,IAAIyG,IAAiBd,MAAK,SAAC0C,GACvD,OAAO,EAAP,KAAYb,GAAI,CAAEC,MAAOY,GAC3B,I,QAoCF,wBACEd,EACAe,GAGA,OADiB,IAAIrM,EAASsL,EAAae,GAC3BvH,UAClB,EAEA,oBACEwH,EACAC,EACAjD,GAGA,YAHA,IAAAA,IAAAA,EAAA,oBAEYkD,MAAMD,GACPE,OAAOC,SAASpD,EAAUgD,EACvC,EAEA,yBAA8BjC,EAAkBsC,GAC9CtC,EAAQzI,UAAUgL,OAAO,UAAWD,GACpCtC,EACG1L,iBAAiB,yBACjBqF,SAAQ,SAAC4B,GAAsB,OAAAA,EAAK1C,aAAa,WAAY,OAA9B,GACpC,EAEA,wBAA6BmH,GAC3BA,EAAQzI,UAAUoB,OAAO,WACzBqH,EACG1L,iBAAiB,yBACjBqF,SAAQ,SAAC4B,GAAsB,OAAAA,EAAK1C,aAAa,WAAY,QAA9B,GACpC,C,GCvLI2J,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBjN,IAAjBkN,EACH,OAAOA,EAAalQ,QAGrB,IAAID,EAASgQ,EAAyBE,GAAY,CAGjDjQ,QAAS,CAAC,GAOX,OAHAmQ,EAAoBF,GAAU9I,KAAKpH,EAAOC,QAASD,EAAQA,EAAOC,QAASgQ,GAGpEjQ,EAAOC,OACf,CCnB0BgQ,CAAoB,G","sources":["webpack://app-jobs/./node_modules/pristinejs/dist/pristine.js","webpack://app-jobs/./src/ts/index.ts","webpack://app-jobs/./src/ts/lib-2sxc-alerts.ts","webpack://app-jobs/./src/ts/lib-2sxc-forms.ts","webpack://app-jobs/webpack/bootstrap","webpack://app-jobs/webpack/startup"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Pristine = factory());\n}(this, (function () { 'use strict';\n\n    var lang = {\n        en: {\n            required: \"This field is required\",\n            email: \"This field requires a valid e-mail address\",\n            number: \"This field requires a number\",\n            integer: \"This field requires an integer value\",\n            url: \"This field requires a valid website URL\",\n            tel: \"This field requires a valid telephone number\",\n            maxlength: \"This fields length must be < ${1}\",\n            minlength: \"This fields length must be > ${1}\",\n            min: \"Minimum value for this field is ${1}\",\n            max: \"Maximum value for this field is ${1}\",\n            pattern: \"Please match the requested format\",\n            equals: \"The two fields do not match\",\n            default: \"Please enter a correct value\"\n        }\n    };\n\n    function findAncestor(el, cls) {\n        while ((el = el.parentElement) && !el.classList.contains(cls)) {}\n        return el;\n    }\n\n    function tmpl(o) {\n        var _arguments = arguments;\n\n        return this.replace(/\\${([^{}]*)}/g, function (a, b) {\n            return _arguments[b];\n        });\n    }\n\n    function groupedElemCount(input) {\n        return input.pristine.self.form.querySelectorAll('input[name=\"' + input.getAttribute('name') + '\"]:checked').length;\n    }\n\n    function mergeConfig(obj1, obj2) {\n        for (var attr in obj2) {\n            if (!(attr in obj1)) {\n                obj1[attr] = obj2[attr];\n            }\n        }\n        return obj1;\n    }\n\n    var defaultConfig = {\n        classTo: 'form-group',\n        errorClass: 'has-danger',\n        successClass: 'has-success',\n        errorTextParent: 'form-group',\n        errorTextTag: 'div',\n        errorTextClass: 'text-help'\n    };\n\n    var PRISTINE_ERROR = 'pristine-error';\n    var SELECTOR = \"input:not([type^=hidden]):not([type^=submit]), select, textarea\";\n    var ALLOWED_ATTRIBUTES = [\"required\", \"min\", \"max\", 'minlength', 'maxlength', 'pattern'];\n    var EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    var MESSAGE_REGEX = /-message(?:-([a-z]{2}(?:_[A-Z]{2})?))?/; // matches, -message, -message-en, -message-en_US\n    var currentLocale = 'en';\n    var validators = {};\n\n    var _ = function _(name, validator) {\n        validator.name = name;\n        if (validator.priority === undefined) validator.priority = 1;\n        validators[name] = validator;\n    };\n\n    _('text', { fn: function fn(val) {\n            return true;\n        }, priority: 0 });\n    _('required', { fn: function fn(val) {\n            return this.type === 'radio' || this.type === 'checkbox' ? groupedElemCount(this) : val !== undefined && val.trim() !== '';\n        }, priority: 99, halt: true });\n    _('email', { fn: function fn(val) {\n            return !val || EMAIL_REGEX.test(val);\n        } });\n    _('number', { fn: function fn(val) {\n            return !val || !isNaN(parseFloat(val));\n        }, priority: 2 });\n    _('integer', { fn: function fn(val) {\n            return !val || /^\\d+$/.test(val);\n        } });\n    _('minlength', { fn: function fn(val, length) {\n            return !val || val.length >= parseInt(length);\n        } });\n    _('maxlength', { fn: function fn(val, length) {\n            return !val || val.length <= parseInt(length);\n        } });\n    _('min', { fn: function fn(val, limit) {\n            return !val || (this.type === 'checkbox' ? groupedElemCount(this) >= parseInt(limit) : parseFloat(val) >= parseFloat(limit));\n        } });\n    _('max', { fn: function fn(val, limit) {\n            return !val || (this.type === 'checkbox' ? groupedElemCount(this) <= parseInt(limit) : parseFloat(val) <= parseFloat(limit));\n        } });\n    _('pattern', { fn: function fn(val, pattern) {\n            var m = pattern.match(new RegExp('^/(.*?)/([gimy]*)$'));return !val || new RegExp(m[1], m[2]).test(val);\n        } });\n    _('equals', { fn: function fn(val, otherFieldSelector) {\n            var other = document.querySelector(otherFieldSelector);return other && (!val && !other.value || other.value === val);\n        } });\n\n    function Pristine(form, config, live) {\n\n        var self = this;\n\n        init(form, config, live);\n\n        function init(form, config, live) {\n\n            form.setAttribute(\"novalidate\", \"true\");\n\n            self.form = form;\n            self.config = mergeConfig(config || {}, defaultConfig);\n            self.live = !(live === false);\n            self.fields = Array.from(form.querySelectorAll(SELECTOR)).map(function (input) {\n\n                var fns = [];\n                var params = {};\n                var messages = {};\n\n                [].forEach.call(input.attributes, function (attr) {\n                    if (/^data-pristine-/.test(attr.name)) {\n                        var name = attr.name.substr(14);\n                        var messageMatch = name.match(MESSAGE_REGEX);\n                        if (messageMatch !== null) {\n                            var locale = messageMatch[1] === undefined ? 'en' : messageMatch[1];\n                            if (!messages.hasOwnProperty(locale)) messages[locale] = {};\n                            messages[locale][name.slice(0, name.length - messageMatch[0].length)] = attr.value;\n                            return;\n                        }\n                        if (name === 'type') name = attr.value;\n                        _addValidatorToField(fns, params, name, attr.value);\n                    } else if (~ALLOWED_ATTRIBUTES.indexOf(attr.name)) {\n                        _addValidatorToField(fns, params, attr.name, attr.value);\n                    } else if (attr.name === 'type') {\n                        _addValidatorToField(fns, params, attr.value);\n                    }\n                });\n\n                fns.sort(function (a, b) {\n                    return b.priority - a.priority;\n                });\n\n                self.live && input.addEventListener(!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'input' : 'change', function (e) {\n                    self.validate(e.target);\n                }.bind(self));\n\n                return input.pristine = { input: input, validators: fns, params: params, messages: messages, self: self };\n            }.bind(self));\n        }\n\n        function _addValidatorToField(fns, params, name, value) {\n            var validator = validators[name];\n            if (validator) {\n                fns.push(validator);\n                if (value) {\n                    var valueParams = name === \"pattern\" ? [value] : value.split(',');\n                    valueParams.unshift(null); // placeholder for input's value\n                    params[name] = valueParams;\n                }\n            }\n        }\n\n        /***\n         * Checks whether the form/input elements are valid\n         * @param input => input element(s) or a jquery selector, null for full form validation\n         * @param silent => do not show error messages, just return true/false\n         * @returns {boolean} return true when valid false otherwise\n         */\n        self.validate = function (input, silent) {\n            silent = input && silent === true || input === true;\n            var fields = self.fields;\n            if (input !== true && input !== false) {\n                if (input instanceof HTMLElement) {\n                    fields = [input.pristine];\n                } else if (input instanceof NodeList || input instanceof (window.$ || Array) || input instanceof Array) {\n                    fields = Array.from(input).map(function (el) {\n                        return el.pristine;\n                    });\n                }\n            }\n\n            var valid = true;\n\n            for (var i = 0; fields[i]; i++) {\n                var field = fields[i];\n                if (_validateField(field)) {\n                    !silent && _showSuccess(field);\n                } else {\n                    valid = false;\n                    !silent && _showError(field);\n                }\n            }\n            return valid;\n        };\n\n        /***\n         * Get errors of a specific field or the whole form\n         * @param input\n         * @returns {Array|*}\n         */\n        self.getErrors = function (input) {\n            if (!input) {\n                var erroneousFields = [];\n                for (var i = 0; i < self.fields.length; i++) {\n                    var field = self.fields[i];\n                    if (field.errors.length) {\n                        erroneousFields.push({ input: field.input, errors: field.errors });\n                    }\n                }\n                return erroneousFields;\n            }\n            if (input.tagName && input.tagName.toLowerCase() === \"select\") {\n                return input.pristine.errors;\n            }\n            return input.length ? input[0].pristine.errors : input.pristine.errors;\n        };\n\n        /***\n         * Validates a single field, all validator functions are called and error messages are generated\n         * when a validator fails\n         * @param field\n         * @returns {boolean}\n         * @private\n         */\n        function _validateField(field) {\n            var errors = [];\n            var valid = true;\n            for (var i = 0; field.validators[i]; i++) {\n                var validator = field.validators[i];\n                var params = field.params[validator.name] ? field.params[validator.name] : [];\n                params[0] = field.input.value;\n                if (!validator.fn.apply(field.input, params)) {\n                    valid = false;\n\n                    if (typeof validator.msg === \"function\") {\n                        errors.push(validator.msg(field.input.value, params));\n                    } else if (typeof validator.msg === \"string\") {\n                        errors.push(tmpl.apply(validator.msg, params));\n                    } else if (validator.msg === Object(validator.msg) && validator.msg[currentLocale]) {\n                        // typeof generates unnecessary babel code\n                        errors.push(tmpl.apply(validator.msg[currentLocale], params));\n                    } else if (field.messages[currentLocale] && field.messages[currentLocale][validator.name]) {\n                        errors.push(tmpl.apply(field.messages[currentLocale][validator.name], params));\n                    } else if (lang[currentLocale] && lang[currentLocale][validator.name]) {\n                        errors.push(tmpl.apply(lang[currentLocale][validator.name], params));\n                    } else {\n                        errors.push(tmpl.apply(lang[currentLocale].default, params));\n                    }\n\n                    if (validator.halt === true) {\n                        break;\n                    }\n                }\n            }\n            field.errors = errors;\n            return valid;\n        }\n\n        /***\n         * Add a validator to a specific dom element in a form\n         * @param elem => The dom element where the validator is applied to\n         * @param fn => validator function\n         * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n         * so on are for the attribute values\n         * @param priority => priority of the validator function, higher valued function gets called first.\n         * @param halt => whether validation should stop for this field after current validation function\n         */\n        self.addValidator = function (elem, fn, msg, priority, halt) {\n            if (elem instanceof HTMLElement) {\n                elem.pristine.validators.push({ fn: fn, msg: msg, priority: priority, halt: halt });\n                elem.pristine.validators.sort(function (a, b) {\n                    return b.priority - a.priority;\n                });\n            } else {\n                console.warn(\"The parameter elem must be a dom element\");\n            }\n        };\n\n        /***\n         * An utility function that returns a 2-element array, first one is the element where error/success class is\n         * applied. 2nd one is the element where error message is displayed. 2nd element is created if doesn't exist and cached.\n         * @param field\n         * @returns {*}\n         * @private\n         */\n        function _getErrorElements(field) {\n            if (field.errorElements) {\n                return field.errorElements;\n            }\n            var errorClassElement = findAncestor(field.input, self.config.classTo);\n            var errorTextParent = null,\n                errorTextElement = null;\n            if (self.config.classTo === self.config.errorTextParent) {\n                errorTextParent = errorClassElement;\n            } else {\n                errorTextParent = errorClassElement.querySelector('.' + self.config.errorTextParent);\n            }\n            if (errorTextParent) {\n                errorTextElement = errorTextParent.querySelector('.' + PRISTINE_ERROR);\n                if (!errorTextElement) {\n                    errorTextElement = document.createElement(self.config.errorTextTag);\n                    errorTextElement.className = PRISTINE_ERROR + ' ' + self.config.errorTextClass;\n                    errorTextParent.appendChild(errorTextElement);\n                    errorTextElement.pristineDisplay = errorTextElement.style.display;\n                }\n            }\n            return field.errorElements = [errorClassElement, errorTextElement];\n        }\n\n        function _showError(field) {\n            var errorElements = _getErrorElements(field);\n            var errorClassElement = errorElements[0],\n                errorTextElement = errorElements[1];\n\n            var input = field.input;\n\n            var inputId = input.id || Math.floor(new Date().valueOf() * Math.random());\n            var errorId = 'error-' + inputId;\n\n            if (errorClassElement) {\n                errorClassElement.classList.remove(self.config.successClass);\n                errorClassElement.classList.add(self.config.errorClass);\n                input.setAttribute('aria-describedby', errorId);\n                input.setAttribute('aria-invalid', 'true');\n            }\n            if (errorTextElement) {\n                errorTextElement.setAttribute('id', errorId);\n                errorTextElement.setAttribute('role', 'alert');\n                errorTextElement.innerHTML = field.errors.join('<br/>');\n                errorTextElement.style.display = errorTextElement.pristineDisplay || '';\n            }\n        }\n\n        /***\n         * Adds error to a specific field\n         * @param input\n         * @param error\n         */\n        self.addError = function (input, error) {\n            input = input.length ? input[0] : input;\n            input.pristine.errors.push(error);\n            _showError(input.pristine);\n        };\n\n        function _removeError(field) {\n            var errorElements = _getErrorElements(field);\n            var errorClassElement = errorElements[0],\n                errorTextElement = errorElements[1];\n            var input = field.input;\n\n\n            if (errorClassElement) {\n                // IE > 9 doesn't support multiple class removal\n                errorClassElement.classList.remove(self.config.errorClass);\n                errorClassElement.classList.remove(self.config.successClass);\n                input.removeAttribute('aria-describedby');\n                input.removeAttribute('aria-invalid');\n            }\n            if (errorTextElement) {\n                errorTextElement.removeAttribute('id');\n                errorTextElement.removeAttribute('role');\n                errorTextElement.innerHTML = '';\n                errorTextElement.style.display = 'none';\n            }\n            return errorElements;\n        }\n\n        function _showSuccess(field) {\n            var errorClassElement = _removeError(field)[0];\n            errorClassElement && errorClassElement.classList.add(self.config.successClass);\n        }\n\n        /***\n         * Resets the errors\n         */\n        self.reset = function () {\n            for (var i = 0; self.fields[i]; i++) {\n                self.fields[i].errorElements = null;\n            }\n            Array.from(self.form.querySelectorAll('.' + PRISTINE_ERROR)).map(function (elem) {\n                elem.parentNode.removeChild(elem);\n            });\n            Array.from(self.form.querySelectorAll('.' + self.config.classTo)).map(function (elem) {\n                elem.classList.remove(self.config.successClass);\n                elem.classList.remove(self.config.errorClass);\n            });\n        };\n\n        /***\n         * Resets the errors and deletes all pristine fields\n         */\n        self.destroy = function () {\n            self.reset();\n            self.fields.forEach(function (field) {\n                delete field.input.pristine;\n            });\n            self.fields = [];\n        };\n\n        self.setGlobalConfig = function (config) {\n            defaultConfig = config;\n        };\n\n        return self;\n    }\n\n    /***\n     *\n     * @param name => Name of the global validator\n     * @param fn => validator function\n     * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n     * so on are for the attribute values\n     * @param priority => priority of the validator function, higher valued function gets called first.\n     * @param halt => whether validation should stop for this field after current validation function\n     */\n    Pristine.addValidator = function (name, fn, msg, priority, halt) {\n        _(name, { fn: fn, msg: msg, priority: priority, halt: halt });\n    };\n\n    Pristine.addMessages = function (locale, messages) {\n        var langObj = lang.hasOwnProperty(locale) ? lang[locale] : lang[locale] = {};\n\n        Object.keys(messages).forEach(function (key, index) {\n            langObj[key] = messages[key];\n        });\n    };\n\n    Pristine.setLocale = function (locale) {\n        currentLocale = locale;\n    };\n\n    return Pristine;\n\n})));\n","import { showAlert, showConfigWarnings } from './lib-2sxc-alerts';\r\nimport { disableInputs, enableInputs, getFormValues, sendForm, validateForm } from './lib-2sxc-forms';\r\nimport { PristineOptions } from './lib-2sxc-pristine-options';\r\n// import { getRecaptchaToken, requiresRecaptcha } from './lib-2sxc-recaptcha';\r\n\r\n// so it can be called from the HTML when content re-initializes dynamically\r\nconst winAny = (window as any)\r\nwinAny.appJobs2 ??= {}\r\nwinAny.appJobs2.init ??= init\r\n\r\nconst debug = false\r\n\r\nfunction init({ domAttribute, currentCategory, validationOptions }: { domAttribute: string, currentCategory: string, validationOptions: PristineOptions }) {\r\n  const appWrapper = document.querySelector(`[${domAttribute}]`)\r\n  const categoryButtons = appWrapper.querySelectorAll(`[app-jobs2-category-button]`)\r\n  const noReloadRequired = currentCategory == \"\"\r\n  setPrimary(currentCategory, categoryButtons)\r\n\r\n  categoryButtons.forEach((categoryButton: HTMLElement) =>\r\n    categoryButton.addEventListener('click', ((e) => {\r\n      const filter = categoryButton.getAttribute('app-jobs2-filter');\r\n\r\n      if (noReloadRequired) {\r\n        e.preventDefault()\r\n        window.history.pushState(null, document.title, categoryButton.getAttribute('href'));\r\n      }\r\n\r\n      setPrimary(filter, categoryButtons)\r\n      filterItems(filter, appWrapper)\r\n    }))\r\n  )\r\n\r\n  const eventsWrapper = document.querySelector(`[${domAttribute}]`);\r\n  if(!eventsWrapper) return\r\n\r\n  const submitButton = eventsWrapper.querySelector('[app-jobs2-send]') as HTMLButtonElement;\r\n  submitButton.addEventListener('click', async (event: Event) => {\r\n    event.preventDefault();\r\n\r\n    const eventBtn = event.currentTarget as HTMLElement;\r\n    \r\n    var valid = validateForm(eventsWrapper, validationOptions)\r\n    if (!valid) {\r\n      showAlert(eventsWrapper, 'msgIncomplete')\r\n      return\r\n    }\r\n    \r\n    const formValues = await getFormValues(eventsWrapper)\r\n\r\n    // if (requiresRecaptcha(eventsWrapper)) {\r\n    //   let token = await getRecaptchaToken(eventsWrapper)\r\n    //   if (!token) return showAlert(eventsWrapper, 'msgRecap')\r\n  \r\n    //   // set token for backend\r\n    //   formValues.Recaptcha = token\r\n    // }\r\n\r\n\r\n    // imply that message is sending by ui modifications \r\n\r\n    disableInputs(eventsWrapper, true)\r\n    showAlert(eventsWrapper, 'msgSending')\r\n    \r\n    //#region request handling\r\n\r\n    let endpoint = (eventsWrapper as HTMLElement).dataset.webservice // (should be \"Form/ProcessForm\" or a custom override)\r\n\r\n\r\n    sendForm(formValues, submitButton, endpoint)\r\n      .then((result: any) => {\r\n        // error\r\n        if(!result.ok) {\r\n          if(debug) console.log('error', result.status);\r\n    \r\n          showAlert(eventsWrapper, 'msgError')\r\n          showConfigWarnings(eventsWrapper, 'app-jobs2-config-warning')\r\n          enableInputs(eventsWrapper)\r\n          return\r\n        }\r\n        \r\n        // success\r\n        if(debug) console.log('success', result.json())\r\n        submitButton.setAttribute(\"disabled\", \"\")\r\n  \r\n        showAlert(eventsWrapper, 'msgOk')\r\n        showConfigWarnings(eventsWrapper, 'app-jobs2-config-warning')\r\n        disableInputs(eventsWrapper, false)\r\n  \r\n      })\r\n\r\n    //#endregion\r\n  })   \r\n}\r\n\r\n// match category button to filter and add/remove primary class\r\nfunction setPrimary(filter: string, buttons: NodeListOf<Element>) {\r\n  if (filter == \"\") filter = \"nofilter\"\r\n  buttons.forEach((button) => {\r\n    if (button.getAttribute('app-jobs2-filter') == filter) {\r\n      button.classList.remove('btn-outline-primary')\r\n      button.classList.add('btn-primary')\r\n      return\r\n    }\r\n    button.classList.remove('btn-primary')\r\n    button.classList.add('btn-outline-primary')\r\n  })\r\n}\r\n\r\n// filter shown items by selected Filter\r\nfunction filterItems(selectedFilter: string, appWrapper: Element) {\r\n  appWrapper.querySelectorAll(`[app-jobs2-filterelem]`).forEach((jobElement: HTMLElement) => {\r\n    if (selectedFilter === \"nofilter\" || [...JSON.parse(jobElement.getAttribute('app-jobs2-filterelem'))].find(filter => filter == selectedFilter)) {\r\n      jobElement.style.display = \"block\"\r\n      return\r\n    }\r\n    jobElement.style.display = \"none\"\r\n  })\r\n}","/*\r\n  This is a shared code used in various 2sxc apps. Make sure that they are in sync, so if you improve it, improve all 2sxc apps which use this. \r\n  ATM they are:\r\n  - EventsAndCourses6\r\n  - MobiusForms5\r\n  The master with the newest / best version must always be the Gallery7, the others should then get a fresh copy.\r\n  Because this is shared, all parameters like DOM-IDs etc. must be provided in the Init-call that it can work across apps\r\n*/ \r\n\r\n// .alert class needs to be included in alert message\r\nexport function showAlert(wrapper: Element, responseMessageElement: string) {\r\n  wrapper.querySelectorAll('.alert').forEach((elem: HTMLElement) => elem.style.display = 'none');\r\n  if (responseMessageElement !== '') (wrapper.querySelector(`#${responseMessageElement}`) as HTMLElement).style.display = 'block';\r\n}\r\n\r\nexport function showConfigWarnings(wrapper: Element, attribute: string) {\r\n  wrapper.querySelectorAll(`[${attribute}]`)\r\n    .forEach((elem: HTMLElement) => elem.style.display = 'block');\r\n}\r\n","import { PristineOptions } from \"./lib-2sxc-pristine-options\";\r\n\r\nlet Pristine = require(\"../../node_modules/pristinejs\");\r\ndeclare let $2sxc: any;\r\n\r\n/*\r\n  This is a shared code used in various 2sxc apps. Make sure that they are in sync, so if you improve it, improve all 2sxc apps which use this. \r\n  ATM they are:\r\n  - EventsAndCourses6\r\n  - MobiusForms6\r\n  - Jobs\r\n  The master with the newest / best version must always be the Gallery7, the others should then get a fresh copy.\r\n  Because this is shared, all parameters like DOM-IDs etc. must be provided in the Init-call that it can work across apps\r\n*/\r\n\r\nconst promiseFileMap = (file: { Encoded: Promise<unknown> }) => {\r\n  if (!file.Encoded) return file;\r\n  return new Promise((resolve) => {\r\n    file.Encoded.then((result) => resolve({ ...file, Encoded: result }));\r\n  });\r\n};\r\n\r\n// automatically build the send-object with all properties,\r\n// based on all form-fields which have a item-property=\"\"\r\nexport async function getFormValues(formWrapper: Element): Promise<any> {\r\n  let data: any = {\r\n    Files: [],\r\n    Fields: {},\r\n    Terms: {},\r\n  };\r\n\r\n  const fields = formWrapper.querySelectorAll(\"input,textarea,select\");\r\n\r\n  fields.forEach((formField: HTMLInputElement) => {\r\n    const fieldKey = getFieldKey(formField);\r\n    if (!fieldKey || !formField.value) return;\r\n\r\n    // for checkboxList to get a array with fieldId and the values\r\n    if (formField.hasAttribute(\"data-checkbox\")) {\r\n      const fieldId = formField.getAttribute(\"data-checkbox\");\r\n      const fieldValue = getFieldValue(formField);\r\n      // Check if the array for this fieldId exists, if not, create it in the data object\r\n\r\n      if (!data[\"Fields\"][fieldId]) {\r\n        data[\"Fields\"][fieldId] = [];\r\n      }\r\n\r\n      if (fieldValue !== \"\") {\r\n        data[\"Fields\"][fieldId].push(fieldValue);\r\n      }\r\n    }\r\n\r\n    // for Multiple Dropdown to get a array with fieldId and the values\r\n    if (\r\n      formField.hasAttribute(\"data-multiple-dropdown\") &&\r\n      formField.tagName == \"SELECT\"\r\n    ) {\r\n      const fieldId = formField.id; // Use the ID of the select element\r\n      const selectedOptions = (formField as any).selectedOptions;\r\n\r\n      // Check if the array for this fieldId exists, if not, create it in the data object\r\n      if (!data[\"Fields\"][fieldId]) {\r\n        data[\"Fields\"][fieldId] = [];\r\n      }\r\n      // loop for each option Value\r\n      for (let i = 0; i < selectedOptions.length; i++) {\r\n        const optionValue = selectedOptions[i].value;\r\n        if (optionValue !== \"\") {\r\n          data[\"Fields\"][fieldId].push(optionValue);\r\n        }\r\n      }\r\n      return;\r\n    }\r\n\r\n    // if it has a recipient email\r\n    if (formField.getAttribute(\"mail\") === \"recipientEmail\") {\r\n      if (data[\"CustomerMails\"] !== \"\") {\r\n        data[\"CustomerMails\"] += \"; \";\r\n      }\r\n      data[\"CustomerMails\"] += getFieldValue(formField);\r\n    }\r\n\r\n    // If it is an attachment then add it to Files\r\n    if (\r\n      formField.getAttribute(\"type\") &&\r\n      formField.getAttribute(\"type\").toLowerCase() == \"file\"\r\n    ) {\r\n      data[\"Files\"].push({\r\n        ...(getFieldValue(formField) as object),\r\n        Field: fieldKey,\r\n      });\r\n      return;\r\n    }\r\n    // If Checkbox or Radio not checked, data will not add in the Request\r\n    if (\r\n      formField.getAttribute(\"type\") &&\r\n      (formField.getAttribute(\"type\").toLowerCase() == \"checkbox\" ||\r\n        formField.getAttribute(\"type\").toLowerCase() == \"radio\") &&\r\n      !formField.checked\r\n    ) {\r\n      return;\r\n    }\r\n    // If the type is a checkbox with an attribute terms, then it will add it to the terms\r\n\r\n    if (\r\n      formField.getAttribute(\"type\") &&\r\n      formField.getAttribute(\"type\").toLowerCase() == \"checkbox\" &&\r\n      formField.getAttribute(\"terms\")\r\n    ) {\r\n      data[\"Terms\"][fieldKey] = getFieldValue(formField);\r\n      return;\r\n    } else if (!formField.hasAttribute(\"data-checkbox\")) {\r\n      // If it is a normal field, e.g. first name, then it is added to the field.\r\n      data[\"Fields\"][fieldKey] = getFieldValue(formField);\r\n    }\r\n  });\r\n\r\n  return Promise.all(data.Files.map(promiseFileMap)).then((loadedFiles) => {\r\n    return { ...data, Files: loadedFiles };\r\n  });\r\n}\r\n\r\nfunction getFieldKey(formField: HTMLInputElement): string {\r\n  // get the property name from special-attribute, name OR id\r\n  return formField.getAttribute(\"name\") || formField.getAttribute(\"id\");\r\n}\r\n\r\nfunction getFieldValue(\r\n  formField: HTMLInputElement\r\n): { Encoded: Promise<unknown>; Name: string } | unknown {\r\n  // extract data from file fields\r\n  if (!formField.getAttribute(\"type\")) return formField.value;\r\n  switch (formField.getAttribute(\"type\").toLowerCase()) {\r\n    case \"file\":\r\n      const file = formField.files[0];\r\n      if (!file) return;\r\n      return {\r\n        Name: file.name,\r\n        Encoded: new Promise((resolve) => {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.onload = (e) => {\r\n            resolve(e.target.result);\r\n          };\r\n        }),\r\n      };\r\n    case \"radio\":\r\n      return formField.value;\r\n    case \"checkbox\":\r\n      return formField.checked ? formField.value : \"\";\r\n    default:\r\n      return formField.value;\r\n  }\r\n}\r\n\r\nexport function validateForm(\r\n  formWrapper: Element,\r\n  options: PristineOptions\r\n): boolean {\r\n  const pristine = new Pristine(formWrapper, options);\r\n  return pristine.validate();\r\n}\r\n\r\nexport function sendForm(\r\n  formData: any,\r\n  submitButtom: HTMLButtonElement,\r\n  endpoint: string = \"Form/ProcessForm\"\r\n): Promise<unknown> {\r\n  const sxc = $2sxc(submitButtom);\r\n  return sxc.webApi.fetchRaw(endpoint, formData);\r\n}\r\n\r\nexport function disableInputs(wrapper: Element, state: boolean) {\r\n  wrapper.classList.toggle(\"disable\", state);\r\n  wrapper\r\n    .querySelectorAll(\"input,textarea,select\")\r\n    .forEach((elem: HTMLElement) => elem.setAttribute(\"disabled\", \"true\"));\r\n}\r\n\r\nexport function enableInputs(wrapper: Element) {\r\n  wrapper.classList.remove(\"disable\");\r\n  wrapper\r\n    .querySelectorAll(\"input,textarea,select\")\r\n    .forEach((elem: HTMLElement) => elem.setAttribute(\"disabled\", \"false\"));\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(80);\n"],"names":["module","exports","lang","en","required","email","number","integer","url","tel","maxlength","minlength","min","max","pattern","equals","default","tmpl","o","_arguments","arguments","this","replace","a","b","groupedElemCount","input","pristine","self","form","querySelectorAll","getAttribute","length","defaultConfig","classTo","errorClass","successClass","errorTextParent","errorTextTag","errorTextClass","PRISTINE_ERROR","ALLOWED_ATTRIBUTES","EMAIL_REGEX","MESSAGE_REGEX","currentLocale","validators","_","name","validator","undefined","priority","Pristine","config","live","_addValidatorToField","fns","params","value","push","valueParams","split","unshift","_validateField","field","errors","valid","i","fn","apply","msg","Object","messages","halt","_getErrorElements","errorElements","errorClassElement","el","cls","parentElement","classList","contains","findAncestor","errorTextElement","querySelector","document","createElement","className","appendChild","pristineDisplay","style","display","_showError","errorId","id","Math","floor","Date","valueOf","random","remove","add","setAttribute","innerHTML","join","_showSuccess","removeAttribute","_removeError","obj1","obj2","attr","mergeConfig","fields","Array","from","map","forEach","call","attributes","test","substr","messageMatch","match","locale","hasOwnProperty","slice","indexOf","sort","addEventListener","e","validate","target","bind","init","silent","HTMLElement","NodeList","window","$","getErrors","erroneousFields","tagName","toLowerCase","addValidator","elem","console","warn","addError","error","reset","parentNode","removeChild","destroy","setGlobalConfig","val","type","trim","isNaN","parseFloat","parseInt","limit","m","RegExp","otherFieldSelector","other","addMessages","langObj","keys","key","index","setLocale","factory","winAny","appJobs2","domAttribute","currentCategory","validationOptions","appWrapper","categoryButtons","noReloadRequired","setPrimary","categoryButton","filter","preventDefault","history","pushState","title","selectedFilter","jobElement","JSON","parse","find","filterItems","eventsWrapper","submitButton","event","currentTarget","validateForm","getFormValues","showAlert","formValues","disableInputs","endpoint","dataset","webservice","sendForm","then","result","ok","debug","log","status","showConfigWarnings","enableInputs","json","buttons","button","wrapper","responseMessageElement","attribute","promiseFileMap","file","Encoded","Promise","resolve","getFieldValue","formField","files","Name","reader","FileReader","readAsDataURL","onload","checked","formWrapper","data","Files","Fields","Terms","fieldKey","getFieldKey","hasAttribute","fieldId","fieldValue","selectedOptions","optionValue","Field","all","loadedFiles","options","formData","submitButtom","$2sxc","webApi","fetchRaw","state","toggle","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}