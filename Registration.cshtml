@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;

@{
  var fieldBuilder = CreateInstance("shared/FieldBuilder.cs");
  var job = AsList(Data["Job"]).FirstOrDefault();
  var domAttribute = "app-jobs2-" + CmsContext.Module.Id;
}

@if(!App.Settings.EnableRegistration) {
	Kit.Page.SetHttpStatus(404);
  return;
}

@* Show warning if 404, event not found *@
@if (job == null) {
  <div class="alert alert-danger" role="alert">
    <span class="sr-only">Error:</span>
    @Resources.LabelNoResults
  </div>
  <a href="@App.Settings.MainPage" class="btn btn-outline-primary">@Html.Raw(Resources.BtnBack)</a>

  Kit.Page.SetHttpStatus(404);
  return;
}

<div class="app-jobs2 app-jobs2-form" 
  @Edit.TagToolbar(job) 
  @domAttribute
  data-webservice="app/auto/api/Form/ProcessForm"
>
	<input type="hidden" id="Job" name="Job" value="@job.EntityGuid">

	@fieldBuilder.Text("JobName", true, true, job.Name)

	<div class="row mb-3">
		@fieldBuilder.Label(Resources.LabelSalutation, "Salutation", true)
		<div class="col-sm-9 radio-group">
			<div class="radio">
				<label>
					<input required data-pristine-required-message name="Salutation" type="radio" value="@Resources.LabelMrs">
					@Resources.LabelMrs
				</label>
			</div>
			<div class="radio">
				<label>
					<input required data-pristine-required-message name="Salutation" type="radio" value="@Resources.LabelMr">
					@Resources.LabelMr
				</label>
			</div>
		</div>
	</div> 

	@fieldBuilder.Text("FirstName", true)
	@fieldBuilder.Text("LastName", true)
	@fieldBuilder.EMail("Mail", true)    
	@fieldBuilder.Text("Phone", false)
	@fieldBuilder.Text("MobilePhone", false)
	@fieldBuilder.Text("Street", true)
	@fieldBuilder.Text("ZIPCity", true)

	@* Country Select *@
	@fieldBuilder.DropDown("Country", true, Resources.CountrySelection.Split('\n'))    

	@fieldBuilder.File("ApplicationFile", true, ".pdf", "ApplicationFile")


	@* Privacy/Terms Checkbox *@
	@if(Kit.Css.Is("bs3")) {
	<div class="form-group">
		<div class="checkbox">
			<label>
					<input type="checkbox" value="" name="GPDR" id="GPDR" required data-pristine-required-message="@Resources.LabelRequired"> @Html.Raw(Resources.GpdrText.Replace("<p>", "").Replace("</p>", ""))
			</label>
		</div>
	</div>
	} else {
	<div class="form-group form-check mb-3">
		<input class="form-check-input" type="checkbox" value="" name="GPDR" id="GPDR" required data-pristine-required-message="@Resources.LabelRequired">
		<label class="form-check-label" for="GPDR">
				@Html.Raw(Resources.GpdrText.Replace("<p>", "").Replace("</p>", ""))
		</label>
	</div>
	}


	@* Submit Button *@
	<div class="mb-3 row">
		<div class="col-md-9 offset-sm-3">
			<a href="@App.Settings.DetailsPage/id/@job.EntityId" class='btn @(Kit.Css.Is("bs3") ? "btn-default" : "btn-outline-primary")'>@Html.Raw(Resources.BtnBack)</a>
			<button type="button" app-jobs2-send class="btn btn-primary">@Html.Raw(Resources.BtnRegistration)</button>
		</div>
	</div>  


	@AddHiddenMessage(Resources.MessageSending, "warning", "msgSending")
	@AddHiddenMessage(Resources.ValidationRequired, "danger", "msgIncomplete")
	@AddHiddenMessage(Resources.RegistrationError, "danger", "msgError")
	<div id="msgOk" class="alert alert-success app-jobs2-message" role="alert">
		<strong>@Html.Raw(Resources.SuccessThanks)</strong>
		@Html.Raw(Resources.SuccessMessage)
	</div>

	@* if is required, because all app-job2-config-warning are shown after submit *@
	@if (!Text.Has(Settings.OwnerMail) || !Text.Has(Settings.MailFrom)) {

		<div class="alert alert-warning" id="" role="alert" app-job2-config-warning>
			@Html.Raw(Resources.MessageDefaultMailSettings.Replace("<p>", "").Replace("</p>", ""))
		</div>		
	}      
</div>

@functions {
  dynamic AddHiddenMessage(string message, string type = "warning", string id = "", string attribute = "") {
    var classes = "alert alert-" + type + " app-jobs2-message";
		var rawMessage = message.Replace("<p>", "").Replace("</p>", "");
    var messageDiv = Tag.Div(rawMessage).Class(classes).Id(id).Attr("role", "alert");
    if (attribute != "") { messageDiv.Attr(attribute, ""); }
    return messageDiv;
  }
}

@Html.Partial("shared/Assets.cshtml", new { DomAttribute = domAttribute })