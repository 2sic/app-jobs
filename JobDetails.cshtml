@using ToSic.Razor.Blade
@inherits Custom.Hybrid.Razor14
@{
    var domAttribute = "app-jobs2-" + CmsContext.Module.Id;
    // Get current job to show from the View-Query + some Helpers
    var job = AsList(Data).FirstOrDefault();

    @* Preflight: check if job found, else show notification and stop processing *@
    if (job == null)
    {
        <h1>@App.Resources.LabelNoResults</h1>
        <a href="@App.Settings.MainPage" class="btn btn-outline-secondary">zur√ºck</a>
        Kit.Page.SetHttpStatus(404, "Error: Job not Found.");
        return;
    }

    var employmentTypes = AsList(job.EmploymentType as object).ToArray();

    Kit.Page.SetTitle(job.Name, "Details");
    
    if (App.Settings.GoogleJobsApi) {
        #region Build JSON-LD

        var jsonDescription = Tag.Strong(job.Description) + "<br/><br/>" + job.Intro + "<br/><br/>" +
                            Tag.Strong(App.Resources.TasksHeading) + job.Tasks + Tag.Strong(App.Resources.QualificationsHeading) +
                            job.Qualifications + Tag.Strong(App.Resources.OurOfferHeading) + job.OurOffer;

        var jsonLd = new Dictionary<string, object> {
            { "@context", "https://schema.org"},
            { "@type", "JobPosting" },
            { "title", job.Name },
            { "description", jsonDescription},
            { "datePosted", job.Date.ToString("s") },
            { "hiringOrganization", new Dictionary<string, object> {
                { "@type", "Organization" },
                { "name", App.Settings.Organization },
                { "logo", CmsContext.Site.Url.Replace("/job-app", "") + "/Portals/job-app/2sxc/Jobs2/src/2sic-logo-square.png" },
                { "sameAs", CmsContext.Site.Url }
            }},
            { "jobLocation", new Dictionary<string, object> {
                {"@type", "Place"},
                { "address", new Dictionary<string, object> {
                    { "@type", "PostalAddress" },
                    { "streetAddress", App.Settings.OrganizationStreet },
                    { "addressLocality", App.Settings.OrganizationCity },
                    { "addressRegion", App.Settings.OrganizationRegion },
                    { "postalCode", App.Settings.OrganizationZip },
                    { "addressCountry", App.Settings.OrganizationCountry }

                }}
            }},
            { "employmentType", employmentTypes.Select(e => e.Key) },
            { "directApply", true },
            { "identifier", new Dictionary<string, object> {
                { "@type", "PropertyValue" },
                { "name", App.Settings.Identifier },
                { "value", job.EntityId }
            }}
        };

        Kit.Page.AddJsonLd(jsonLd);
        #endregion
    }
}

<div class="app-jobs2-details"  @Kit.Toolbar.Default(Content)>
    <div class="row mb-3 mb-lg-5">
        <div class="col-md-7 order-md-first">
            <h1 class="display-2">
                <span class="mb-1 d-block">@App.Resources.NamePrefix</span>
                @job.Name
            </h1>
            <div>@App.Resources.DatePosted: @job.Date.ToString("d")</div>
        </div>
        <div class="col-md-4 order-md-last offset-lg-1">
            @if (Text.Has(job.Image)) {
                @Kit.Image.Picture(job.Image, settings: "Content", factor: "1/2", imgClass: "rounded", imgAltFallback : job.Name) 
            }
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12">
            <h2>@job.Description</h2>
            <p>&nbsp;</p>
            <p style="white-space: pre-line">@job.Intro</p>
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12">
            <h2>@App.Resources.TasksHeading</h2>
            @Html.Raw(job.Tasks)
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12">
            <h2>@App.Resources.QualificationsHeading</h2>
            @Html.Raw(job.Qualifications)
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12 mb-2">
            <h2>@App.Resources.OurOfferHeading</h2>
            @Html.Raw(job.OurOffer)
        </div>
    </div>

    <div class="row mb-3 mb-lg-4">
        <div class="col-12 mb-2">
            @Html.Raw(job.Outro)
        </div>
    </div>

    <a href="@App.Settings.MainPage" class="btn btn-outline-secondary">@App.Resources.BtnBack</a>
    @if (App.Settings.EnableRegistration) {
        <a href="@App.Settings.RegistrationPage/jobId/@job.EntityId" class="btn btn-primary">@App.Resources.BtnRegistration</a>
    }
</div>


@Html.Partial("shared/Assets.cshtml", new { DomAttribute = domAttribute })
